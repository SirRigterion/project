networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - './frontend/nginx.conf:/etc/nginx/nginx.conf'
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    networks:
      - dev

  frontend:
    build:
      context: ./frontend
    depends_on:
      backend:
        condition: service_started
    expose:
      - "80"
    networks:
      - dev

  backend:
    build:
      context: ./backend
    env_file:
      - ./.env
    volumes:
    - ./.env:/.env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - dev

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - dev

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dev

volumes:
  pgdata:
  redis_data:

