worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Docker‑DNS (для пересоздания контейнеров без перезапуска nginx)
    resolver 127.0.0.11 valid=10s;
    # необязательно: кешировать DNS‑ответы чуть дольше
    # resolver_timeout 5s;

    # upstream‑группа для фронтенда
    upstream frontend_up {
        # указываем имя контейнера/сервиса из docker‑compose
        server frontend:3000;
        # если у вас несколько инстансов:
        # server frontend-1:3000;
        # server frontend-2:3000;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;  # замените на ваш домен, если нужно

        # общие proxy‑заголовки, чтобы бэкенды видели реальный IP/Host
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        ## === ФРОНТЕНД ===
        location / {
            proxy_pass http://frontend_up;
            # WebSocket, если он нужен:
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade   $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }

        ## === API ===
        upstream backend_up {
            server backend:8000;
        }

        location /api/ {
            proxy_pass http://backend_up;
            proxy_http_version 1.1;

            # WebSocket‑апгрейд
            proxy_set_header Upgrade   $http_upgrade;
            map $http_upgrade $connection_upgrade {
                default upgrade;
                ''      close;
            }
            proxy_set_header Connection $connection_upgrade;

            proxy_cache_bypass $http_upgrade;
        }
    }
}
